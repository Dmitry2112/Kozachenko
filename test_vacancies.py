from datetime import datetime
from unittest import TestCase
from lab_5_2_cur_version import Vacancy, Salary, InputConnect, DataSet
import lab_5_2_cur_version as glob
from lab_5_2_cur_version import *
import unittest
import datetime


class VacancyTest(TestCase):
    def test_vacancy_type(self):
        self.assertEqual(type(Vacancy('Аналитик', 'Аналитическая аналитика',
                                      'Анализировать все подряд\nНу и много чего ещё',
                                      'between1And3',
                                      'Нет',
                                      'Компания',
                                      Salary('20000', '30000', 'True', 'RUR'),
                                      'Москва',
                                      datetime.datetime.strptime('2022-05-31T17:32:31+0300',
                                                                 '%Y-%m-%dT%H:%M:%S%z'))).__name__, 'Vacancy')

    def test_vacancy_name(self):
        self.assertEqual(Vacancy('Аналитик', 'Аналитическая аналитика',
                                 'Анализировать все подряд\nНу и много чего ещё',
                                 'between1And3',
                                 'Нет',
                                 'Компания',
                                 Salary('20000', '30000', 'True', 'RUR'),
                                 'Москва',
                                 datetime.datetime.strptime('2022-05-31T17:32:31+0300', '%Y-%m-%dT%H:%M:%S%z')).name,
                         'Аналитик')


class SalaryTest(TestCase):
    def test_salary_type(self):
        self.assertEqual(type(Salary('20000', '30000', 'True', 'Рубли')).__name__, 'Salary')

    def test_salary_to_str(self):
        self.assertEqual(str(Salary('20000', '30000', 'True', 'RUR')), f'20 000 - 30 000 (Рубли) (Без вычета налогов)')


class DataSetTest(TestCase):
    def test_init(self):
        test_list = [['Web-программист', '<p>NEW! Web-программист(без опыта и с опытом)</p> <p> </p> <p><strong>Обязанности</strong>:</p> <p>- верстка сайтов на основе готовых макетов PHP, HTML и CSS</p> <p>- подключение собственной системы управления(обучение)</p> <p>- развитие собственного движка и системы управления</p> <p>- установка движка организации на проектах (обучение)</p> <p><br /><strong>Требования:</strong></p> <ul> <li>PHP7.4+ (знания ООП и паттернов проектирования) MySQL(MariaDB,PostgresQL)</li> <li>CSS(LESS,SASS)</li> <li>JS(TypeScript,NodeJS)</li> <li>знание основ Figma / Photoshop(для верстки с макетов из PSD)</li> <li>остальное при собеседовании.</li> </ul> <p><br /><strong>Условия:</strong></p> <p>- работа с офисе на Московское шоссе (удаленка после испытательного срока)</p> <p>- 5 дней с 9-00 до 18-00 (после вхождения в работу график может быть плавающим)</p> <p>- чай кофе печеньки</p> <p>- дружный коллектив</p> <p>- отпуск ежегодный оплачиваемый</p> <p> </p> <p><strong>В целом рассматриваем как с опытом работы так и без опыта. Если человек готов учиться и развиваться, он предан и любит программировать и верстать сайты мы его научим и подготовим за счет компании.</strong></p> <p> </p> <p>Испытательный срок от 2 до 4 недель(при собеседовании)</p> <p>Зарплата 2 раза в месяц: аванс и оклад.</p> <p><strong>Оклад фиксированный</strong> + <strong>% от объема</strong> выполненных задач за месяц.</p>', 'Управление проектами\nВедение переговоров\nРазработка ПО\nРазработка технических заданий\nУправление интернет-проектами\nРазработка концепции\nИнформационные технологии\nОрганизаторские навыки\nПроведение презентаций\nОбучение персонала\nАнглийский язык\nРабота в команде\nПодбор персонала', 'noExperience', 'False', 'Асташенков Г. А.', '30000.0', '80000.0', 'False', 'RUR', 'Ульяновск', '2022-05-31T17:32:31+0300'],
        ['Технический консультант (электротехническое оборудование)', '<p>В связи с развитием компании требуется технический консультант/ специалист проектных продаж</p> <p> </p> <p><strong>Обязанности:</strong></p> <ul> <li>Работа с проектными организациями (формирование и управление клиентской базой проектных учреждений и подразделений необходимого потенциала: поиск профильных проектных институтов на закрепленной территории, развитие отношений, определение перспектив сотрудничества; проведение обучения, семинаров и презентаций для специалистов и руководителей проектных институтов; защита проектов от перевода на конкурирующие бренды, участие в проектном сопровождении проектов до этапа принятия решения заказчиком)</li> <li>Осуществление мероприятий по повышению технической лояльности дистрибьюторов, партнеров и конечных клиентов (проведение техно-коммерческих семинаров и презентаций по комплексным решениям для клиентов; проведение технического обучения специалистов клиентов для обеспечения их необходимой технической подготовки);</li> <li>Осуществление мероприятий по повышению конкурентоспособности продукта и бренда компании (создание и постоянное совершенствование методических материалов и обучающих программ и презентаций, конкурентный анализ рынка электротехнического оборудования, подготовка сравнительного анализа продукции, формирование рекомендаций профильным отделам компании по повышению конкурентоспособности)</li> <li>Обеспечение необходимого уровня квалификации сотрудников отдела продаж профильных специалистов компании;</li> <li>Расширение деловых контактов компании с клиентами, выстраивание сотрудничества, несущее выгоду обеим сторонам;</li> <li>Участие во внутренних проектах улучшений.</li> </ul> <p> </p> <p><strong>Требования:</strong></p> <ul> <li>Умение читать электрические схемы;</li> <li>Знание AutoCad, Компас;</li> <li>Опыт работы с аналогичным оборудованием;</li> <li>Высшее техническое образование;</li> <li>Опыт работы на электротехническом рынке (В2В), не менее 3-и лет;</li> <li>Активность, позитивный настрой, ориентация на результат, стрессоустойчивость, лояльность, коммуникабельность, умение оказывать влияние на людей, управление конфликтами, умение работать в команде.</li> </ul> <p> </p> <p><strong>Условия:</strong></p> <ul> <li>Оклад от 100 000 рублей + переменная часть;</li> <li>Оформление по ТК РФ, полностью белая зпл;</li> <li>График работы 9.00 – 18.00, 5/2, выходные сб.вскр</li> <li>Современный офис в р-не ст.м. Адмиралтейская</li> </ul> <p> </p> <p> </p> <p> </p>', 'Проведение презентаций\nРабота в команде\nОрганизаторские навыки\nУправление отношениями с клиентами\nВедение переговоров\nКонкурентная аналитика\nПродажа комплексных проектов\nКонсультирование клиентов\nОбучение', 'between3And6', 'False', 'Кадровое агентство «Лаборатория T&D Lab»', '100000.0', '200000.0', 'False', 'RUR', 'Санкт-Петербург', '2022-06-06T12:08:26+0300']
        ]
        data_set = DataSet(test_list)
        self.assertEqual(len(data_set.list_of_vac_str), 2)

    def test_generate(self):
        test_list = [['Web-программист',
                      '<p>NEW! Web-программист(без опыта и с опытом)</p> <p> </p> <p><strong>Обязанности</strong>:</p> <p>- верстка сайтов на основе готовых макетов PHP, HTML и CSS</p> <p>- подключение собственной системы управления(обучение)</p> <p>- развитие собственного движка и системы управления</p> <p>- установка движка организации на проектах (обучение)</p> <p><br /><strong>Требования:</strong></p> <ul> <li>PHP7.4+ (знания ООП и паттернов проектирования) MySQL(MariaDB,PostgresQL)</li> <li>CSS(LESS,SASS)</li> <li>JS(TypeScript,NodeJS)</li> <li>знание основ Figma / Photoshop(для верстки с макетов из PSD)</li> <li>остальное при собеседовании.</li> </ul> <p><br /><strong>Условия:</strong></p> <p>- работа с офисе на Московское шоссе (удаленка после испытательного срока)</p> <p>- 5 дней с 9-00 до 18-00 (после вхождения в работу график может быть плавающим)</p> <p>- чай кофе печеньки</p> <p>- дружный коллектив</p> <p>- отпуск ежегодный оплачиваемый</p> <p> </p> <p><strong>В целом рассматриваем как с опытом работы так и без опыта. Если человек готов учиться и развиваться, он предан и любит программировать и верстать сайты мы его научим и подготовим за счет компании.</strong></p> <p> </p> <p>Испытательный срок от 2 до 4 недель(при собеседовании)</p> <p>Зарплата 2 раза в месяц: аванс и оклад.</p> <p><strong>Оклад фиксированный</strong> + <strong>% от объема</strong> выполненных задач за месяц.</p>',
                      'Управление проектами\nВедение переговоров\nРазработка ПО\nРазработка технических заданий\nУправление интернет-проектами\nРазработка концепции\nИнформационные технологии\nОрганизаторские навыки\nПроведение презентаций\nОбучение персонала\nАнглийский язык\nРабота в команде\nПодбор персонала',
                      'noExperience', 'False', 'Асташенков Г. А.', '30000.0', '80000.0', 'False', 'RUR', 'Ульяновск',
                      '2022-05-31T17:32:31+0300'],
                     ['Технический консультант (электротехническое оборудование)',
                      '<p>В связи с развитием компании требуется технический консультант/ специалист проектных продаж</p> <p> </p> <p><strong>Обязанности:</strong></p> <ul> <li>Работа с проектными организациями (формирование и управление клиентской базой проектных учреждений и подразделений необходимого потенциала: поиск профильных проектных институтов на закрепленной территории, развитие отношений, определение перспектив сотрудничества; проведение обучения, семинаров и презентаций для специалистов и руководителей проектных институтов; защита проектов от перевода на конкурирующие бренды, участие в проектном сопровождении проектов до этапа принятия решения заказчиком)</li> <li>Осуществление мероприятий по повышению технической лояльности дистрибьюторов, партнеров и конечных клиентов (проведение техно-коммерческих семинаров и презентаций по комплексным решениям для клиентов; проведение технического обучения специалистов клиентов для обеспечения их необходимой технической подготовки);</li> <li>Осуществление мероприятий по повышению конкурентоспособности продукта и бренда компании (создание и постоянное совершенствование методических материалов и обучающих программ и презентаций, конкурентный анализ рынка электротехнического оборудования, подготовка сравнительного анализа продукции, формирование рекомендаций профильным отделам компании по повышению конкурентоспособности)</li> <li>Обеспечение необходимого уровня квалификации сотрудников отдела продаж профильных специалистов компании;</li> <li>Расширение деловых контактов компании с клиентами, выстраивание сотрудничества, несущее выгоду обеим сторонам;</li> <li>Участие во внутренних проектах улучшений.</li> </ul> <p> </p> <p><strong>Требования:</strong></p> <ul> <li>Умение читать электрические схемы;</li> <li>Знание AutoCad, Компас;</li> <li>Опыт работы с аналогичным оборудованием;</li> <li>Высшее техническое образование;</li> <li>Опыт работы на электротехническом рынке (В2В), не менее 3-и лет;</li> <li>Активность, позитивный настрой, ориентация на результат, стрессоустойчивость, лояльность, коммуникабельность, умение оказывать влияние на людей, управление конфликтами, умение работать в команде.</li> </ul> <p> </p> <p><strong>Условия:</strong></p> <ul> <li>Оклад от 100 000 рублей + переменная часть;</li> <li>Оформление по ТК РФ, полностью белая зпл;</li> <li>График работы 9.00 – 18.00, 5/2, выходные сб.вскр</li> <li>Современный офис в р-не ст.м. Адмиралтейская</li> </ul> <p> </p> <p> </p> <p> </p>',
                      'Проведение презентаций\nРабота в команде\nОрганизаторские навыки\nУправление отношениями с клиентами\nВедение переговоров\nКонкурентная аналитика\nПродажа комплексных проектов\nКонсультирование клиентов\nОбучение',
                      'between3And6', 'False', 'Кадровое агентство «Лаборатория T&D Lab»', '100000.0', '200000.0',
                      'False', 'RUR', 'Санкт-Петербург', '2022-06-06T12:08:26+0300']
                     ]
        titles = ['name','description','key_skills','experience_id','premium','employer_name','salary_from','salary_to','salary_gross','salary_currency','area_name','published_at']
        data_set = DataSet(test_list)
        list_of_vac = data_set.generate_vacs_from_strs(titles, {'name': 'Web-программист'}, {}, {}, None)
        self.assertEqual(len(list_of_vac), 1)
        self.assertEqual(list_of_vac[0].name, 'Web-программист')
        self.assertEqual(list_of_vac[0].experience_id, 'noExperience')
        self.assertEqual(list_of_vac[0].premium, 'False')



class InputConnectTest(TestCase):
    def test_input_connect_type(self):
        self.assertEqual((type(InputConnect())).__name__, 'InputConnect')

    def test_compare_by_exp(self):
        first_vac = Vacancy('Аналитик', 'Аналитическая аналитика',
                            'Анализировать все подряд\nНу и много чего ещё',
                            'between1And3',
                            'Нет',
                            'Компания',
                            Salary('20000', '30000', 'True', 'RUR'),
                            'Москва',
                            datetime.datetime.strptime('2022-05-31T17:32:31+0300', '%Y-%m-%dT%H:%M:%S%z'))

        second_vac = Vacancy('Аналитик', 'Аналитическая аналитика',
                             'Анализировать все подряд\nНу и много чего ещё',
                             'noExperience',
                             'Нет',
                             'Компания',
                             Salary('20000', '30000', 'True', 'RUR'),
                             'Москва',
                             datetime.datetime.strptime('2022-05-31T17:32:31+0300', '%Y-%m-%dT%H:%M:%S%z'))

        self.assertEqual(InputConnect.compare_by_exp(first_vac, second_vac), 1)

    def test_compare_by_sal(self):
        first_vac = Vacancy('Аналитик', 'Аналитическая аналитика',
                            'Анализировать все подряд\nНу и много чего ещё',
                            'between1And3',
                            'Нет',
                            'Компания',
                            Salary('20000', '90000', 'True', 'RUR'),
                            'Москва',
                            datetime.datetime.strptime('2022-05-31T17:32:31+0300', '%Y-%m-%dT%H:%M:%S%z'))

        second_vac = Vacancy('Аналитик', 'Аналитическая аналитика',
                             'Анализировать все подряд\nНу и много чего ещё',
                             'noExperience',
                             'Нет',
                             'Компания',
                             Salary('20000', '30000', 'True', 'RUR'),
                             'Москва',
                             datetime.datetime.strptime('2022-05-31T17:32:31+0300', '%Y-%m-%dT%H:%M:%S%z'))

        self.assertEqual(InputConnect.compare_by_sal(first_vac, second_vac), 1)

    def test_full_check_error_not_found(self):
        i_c = InputConnect()
        i_c.file_name_ok = False
        self.assertEqual(i_c.full_check_error_not_found(), False)

    def test_process_request_params(self):
        input_connect = InputConnect()
        input_connect.file_name = 'work_files/vacancies_medium.csv'
        input_connect.request_param = 'Опыт работы: От 3 до 6 лет'
        input_connect.column_title_for_sort = 'Оклад'
        input_connect.reversed_sort = 'Нет'
        input_connect.index_parts = '1'
        input_connect.params_input = 'Название, Навыки, Опыт работы, Компания'

        input_connect.process_request_params()
        self.assertEqual(InputConnect.dict_for_exact_match['experience_id'], 'between3And6')
        #print(InputConnect.dict_for_exact_match)


class GlobalTest(TestCase):
    def test_make_range(self):
        data_vacancies = [{
            'Название': 'Аналитик',
            'Описание': 'Аналитическая аналитика',
            'Навыки': 'Один навык',
            'Опыт работы': 'Нет опыта',
            'Премиум-вакансия': 'Нет',
            'Компания': 'Google',
            'Оклад': str(Salary('20000', '30000', 'True', 'RUR')),
            'Название региона': 'Москва',
            'Дата публикации вакансии': '30.05.2010'
        },
            {
                'Название': 'Программист',
                'Описание': 'Нужно будет код писать',
                'Навыки': 'Java',
                'Опыт работы': 'Более 6 лет',
                'Премиум-вакансия': 'Нет',
                'Компания': 'Яндекс',
                'Оклад': str(Salary('190000', '240000', 'True', 'RUR')),
                'Название региона': 'Москва',
                'Дата публикации вакансии': '25.05.2010'
            }
        ]

        self.assertEqual(glob.make_range([], data_vacancies), (0, 2))
        self.assertEqual(glob.make_range([1], data_vacancies), (0, 2))
        self.assertEqual(glob.make_range([1, 2], data_vacancies), (0, 1))

    def test_formatter(self):
        eng_rus_work_experience = {
            "noExperience": "Нет опыта",
            "between1And3": "От 1 года до 3 лет",
            "between3And6": "От 3 до 6 лет",
            "moreThan6": "Более 6 лет"
        }

        vac = Vacancy('Аналитик', 'Аналитическая аналитика',
                      'Один навык', 'noExperience', 'False', 'Google',
                      Salary('20000', '30000', 'True', 'RUR'),
                      'Москва',
                      datetime.datetime.strptime('2010-05-30T17:32:31+0300', '%Y-%m-%dT%H:%M:%S%z'))

        self.assertEqual(glob.formatter(vac, eng_rus_work_experience), {
            'Название': 'Аналитик',
            'Описание': 'Аналитическая аналитика',
            'Навыки': 'Один навык',
            'Опыт работы': 'Нет опыта',
            'Премиум-вакансия': 'Нет',
            'Компания': 'Google',
            'Оклад': str(Salary('20000', '30000', 'True', 'RUR')),
            'Название региона': 'Москва',
            'Дата публикации вакансии': '30.05.2010'
        })

    def test_format_for_table(self):
        vacancy = {
            'Название': 'Аналитик',
            'Описание': 'Аналитическая аналитика',
            'Навыки': 'Один навык',
            'Опыт работы': 'Нет опыта',
            'Премиум-вакансия': 'Нет',
            'Компания': 'Google',
            'Оклад': str(Salary('20000', '30000', 'True', 'RUR')),
            'Название региона': 'Москва',
            'Дата публикации вакансии': '30.05.2010'
        }

        self.assertEqual(glob.format_for_table(vacancy), [
            'Аналитик',
            'Аналитическая аналитика',
            'Один навык',
            'Нет опыта',
            'Нет',
            'Google',
            str(Salary('20000', '30000', 'True', 'RUR')),
            'Москва',
            '30.05.2010'
        ])


if __name__ == '__main__':
    unittest.main()
